{"ast":null,"code":"var _jsxFileName = \"/Users/teresa/userlist/UserList/src/UserList.js\";\nimport React from 'react';\nimport { Button, Dialog, Input, Form, Table, Tag, Radio } from 'element-react';\nimport 'element-theme-default';\nimport storage from './storage';\n\nclass UserList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addUser = () => {\n      let userList = storage.get(\"UserList\") || [];\n      userList.push({\n        name: this.state.form.name,\n        age: this.state.form.age,\n        sex: this.state.form.sex,\n        img: this.state.form.img\n      });\n      this.setState({\n        userList: userList,\n        dialogVisible: false\n      }); //更新缓存中用户列表\n\n      storage.set(\"UserList\", userList); //重置表单\n\n      this.refs.form.resetFields();\n    };\n\n    this.state = {\n      updated: false,\n      form: {\n        name: '',\n        age: '',\n        sex: 1,\n        img: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            let reg = /^[\\u4e00-\\u9fa5a-zA-Z]{1,8}$/;\n\n            if (value && value.length > 0) {\n              if (!reg.test(value)) {\n                callback([new Error('姓名输入不合法')]);\n              } else {\n                callback();\n              }\n            } else if (value.length === 0) {\n              callback();\n            } else {\n              callback(new Error('姓名输入不合法'));\n            }\n          }\n        }],\n        age: [{\n          required: true,\n          message: '请输入年龄',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            let reg = /^\\d{1,3}$/;\n\n            if (value && value.length > 0) {\n              if (!reg.test(value)) {\n                callback([new Error('年龄输入不合法')]);\n              } else {\n                callback();\n              }\n            } else if (value.length === 0) {\n              callback();\n            } else {\n              callback(new Error('年龄输入不合法'));\n            }\n          }\n        }],\n        sex: [{\n          required: true,\n          trigger: 'blur'\n        }]\n      },\n      userList: [],\n      dialogVisible: false,\n      imageUrl: '',\n      columns: [{\n        type: 'index'\n      }, {\n        type: 'expand',\n        label: \"详情\",\n        expandPannel: function (data) {\n          return React.createElement(Form, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, React.createElement(Form.Item, {\n            label: \"\\u59D3\\u540D\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, data.name)), React.createElement(Form.Item, {\n            label: \"\\u5E74\\u9F84\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, data.age)), React.createElement(Form.Item, {\n            label: \"\\u6027\\u522B\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, data.sex)));\n        }\n      }, {\n        label: \"姓名\",\n        prop: \"name\",\n        width: 180,\n        render: function (userList) {\n          return React.createElement(Tag, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, userList.name);\n        }\n      }, {\n        label: \"操作\",\n        prop: \"address\",\n        render: (row, column, index) => {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(Button, {\n            plain: true,\n            type: \"info\",\n            size: \"small\",\n            onClick: this.update.bind(this, row),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, \"\\u7F16\\u8F91\"), React.createElement(Button, {\n            type: \"danger\",\n            size: \"small\",\n            onClick: this.deleteRow.bind(this, index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, \"\\u5220\\u9664\"));\n        }\n      }]\n    };\n  } //生命周期函数 页面加载就会触发\n\n\n  componentDidMount() {\n    //获取本地缓存的用户列表\n    let userList = storage.get(\"UserList\");\n\n    if (userList) {\n      this.setState({\n        userList: userList\n      });\n    } //console.log(userList);\n\n  } //性别\n\n\n  onSexChange(value) {\n    let form = this.state.form;\n    form.sex = value;\n    this.setState({\n      form: form\n    });\n  } //提交表单\n\n\n  //更新state\n  onChange(key, value) {\n    this.setState({\n      form: Object.assign({}, this.state.form, {\n        [key]: value\n      })\n    });\n  } //删除数据\n\n\n  deleteRow(index) {\n    let userList = this.state.userList;\n    userList.splice(index, 1);\n    this.setState({\n      userList: [...userList]\n    }); //更新本地缓存\n\n    storage.set(\"UserList\", userList);\n  } //修改数据\n\n\n  update(row) {\n    this.setState({\n      dialogVisible: true,\n      updated: true,\n      form: {\n        name: row.name,\n        age: row.age,\n        sex: row.sex\n      }\n    });\n  } //图片上传\n\n\n  handleAvatarScucess(res, file) {\n    console.log(res);\n    this.setState({\n      imageUrl: URL.createObjectURL(file.raw)\n    });\n  }\n\n  beforeAvatarUpload(file) {\n    const isJPG = file.type === 'image/jpeg';\n    const isLt2M = file.size / 1024 / 1024 < 2;\n\n    if (!isJPG) {\n      alert('上传头像图片只能是 JPG 格式!');\n    }\n\n    if (!isLt2M) {\n      alert('上传头像图片大小不能超过 2MB!');\n    }\n\n    return isJPG && isLt2M;\n  }\n\n  render() {\n    // const { imageUrl } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => this.setState({\n        dialogVisible: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"\\u65B0\\u589E\"), React.createElement(Dialog, {\n      size: \"tiny\",\n      title: \"\\u65B0\\u589E\\u7528\\u6237\",\n      visible: this.state.dialogVisible,\n      onCancel: () => this.setState({\n        dialogVisible: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Dialog.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Form, {\n      ref: \"form\",\n      model: this.state.form,\n      rules: this.state.rules,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u59D3\\u540D\",\n      labelWidth: \"60\",\n      prop: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u59D3\\u540D\",\n      value: this.state.form.name,\n      onChange: this.onChange.bind(this, 'name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"\\u5E74\\u9F84\",\n      labelWidth: \"60\",\n      prop: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5E74\\u9F84\",\n      value: this.state.form.age,\n      onChange: this.onChange.bind(this, 'age'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"\\u6027\\u522B\",\n      labelWidth: \"60\",\n      prop: \"sex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      value: \"\\u7537\",\n      checked: this.state.form.sex === 1,\n      onChange: this.onSexChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"\\u7537\"), React.createElement(Radio, {\n      value: \"\\u5973\",\n      checked: this.state.form.sex === 2,\n      onChange: this.onSexChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"\\u5973\")))), React.createElement(Dialog.Footer, {\n      className: \"dialog-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.refs.form.resetFields();\n        this.setState({\n          dialogVisible: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"\\u53D6 \\u6D88\"), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.addUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"\\u786E \\u5B9A\"))), React.createElement(Table, {\n      style: {\n        width: '500px'\n      },\n      columns: this.state.columns,\n      data: this.state.userList,\n      highlightCurrentRow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default UserList;","map":{"version":3,"sources":["/Users/teresa/userlist/UserList/src/UserList.js"],"names":["React","Button","Dialog","Input","Form","Table","Tag","Radio","storage","UserList","Component","constructor","props","addUser","userList","get","push","name","state","form","age","sex","img","setState","dialogVisible","set","refs","resetFields","updated","rules","required","message","trigger","validator","rule","value","callback","reg","length","test","Error","imageUrl","columns","type","label","expandPannel","data","prop","width","render","row","column","index","update","bind","deleteRow","componentDidMount","onSexChange","onChange","key","Object","assign","splice","handleAvatarScucess","res","file","console","log","URL","createObjectURL","raw","beforeAvatarUpload","isJPG","isLt2M","size","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Dialog, Input, Form, Table, Tag, Radio } from 'element-react';\nimport 'element-theme-default';\nimport storage from './storage';\n\nclass UserList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            updated: false,\n            form: {\n                name: '',\n                age: '',\n                sex: 1,\n                img: ''\n            },\n            rules: {\n                name: [\n                    { required: true, message: '请输入姓名', trigger: 'blur' },\n                    {\n                        validator: (rule, value, callback) => {\n                            let reg = /^[\\u4e00-\\u9fa5a-zA-Z]{1,8}$/;\n                            if (value && value.length > 0) {\n                                if (!reg.test(value)) {\n                                    callback([new Error('姓名输入不合法')]);\n                                } else {\n                                    callback();\n                                }\n                            } else if (value.length === 0) {\n                                callback();\n                            } else {\n                                callback(new Error('姓名输入不合法'));\n                            }\n                        }\n                    }\n                ],\n                age: [\n                    { required: true, message: '请输入年龄', trigger: 'blur' },\n                    {\n                        validator: (rule, value, callback) => {\n                            let reg = /^\\d{1,3}$/;\n                            if (value && value.length > 0) {\n                                if (!reg.test(value)) {\n                                    callback([new Error('年龄输入不合法')]);\n                                } else {\n                                    callback();\n                                }\n                            } else if (value.length === 0) {\n                                callback();\n                            } else {\n                                callback(new Error('年龄输入不合法'));\n                            }\n                        }\n                    }\n                ],\n                sex: [\n                    { required: true, trigger: 'blur' },\n                ]\n            },\n            userList: [],\n            dialogVisible: false,\n            imageUrl: '',\n            columns: [\n                {\n                    type: 'index'\n                },\n                {\n                    type: 'expand',\n                    label: \"详情\",\n                    expandPannel: function (data) {\n                        return (\n                            <Form>\n                                <Form.Item label=\"姓名\"><span>{data.name}</span></Form.Item>\n                                <Form.Item label=\"年龄\"><span>{data.age}</span></Form.Item>\n                                <Form.Item label=\"性别\"><span>{data.sex}</span></Form.Item>\n                                {/* <Form.Item label=\"头像\"><span>{data.img}</span></Form.Item> */}\n                            </Form>\n                        )\n                    }\n                },\n                {\n                    label: \"姓名\",\n                    prop: \"name\",\n                    width: 180,\n                    render: function (userList) {\n                        return <Tag>{userList.name}</Tag>\n                    }\n                },\n                {\n                    label: \"操作\",\n                    prop: \"address\",\n                    render: (row, column, index) => {\n                        return (\n                            <span>\n                                <Button plain={true} type=\"info\" size=\"small\"onClick={this.update.bind(this, row)}>编辑</Button>\n                                <Button type=\"danger\" size=\"small\" onClick={this.deleteRow.bind(this, index)}>删除</Button>\n                            </span>\n                        )\n                    }\n                }\n            ]\n        }\n    }\n\n    //生命周期函数 页面加载就会触发\n    componentDidMount() {\n        //获取本地缓存的用户列表\n        let userList = storage.get(\"UserList\");\n        if (userList) {\n            this.setState({\n                userList: userList\n            })\n        }\n        //console.log(userList);\n    }\n    //性别\n    onSexChange(value) {\n        let { form } = this.state;\n        form.sex = value;\n        this.setState({\n            form: form\n        });\n    }\n    //提交表单\n    addUser = () => {\n        let userList = storage.get(\"UserList\") || [];\n        userList.push({\n            name: this.state.form.name,\n            age: this.state.form.age,\n            sex: this.state.form.sex,\n            img: this.state.form.img\n        })\n        this.setState({\n            userList: userList,\n            dialogVisible: false\n        });\n        //更新缓存中用户列表\n        storage.set(\"UserList\", userList);\n        //重置表单\n        this.refs.form.resetFields();\n    }\n    //更新state\n    onChange(key, value) {\n        this.setState({\n            form: Object.assign({}, this.state.form, { [key]: value })\n        });\n    }\n    //删除数据\n    deleteRow(index) {\n        let { userList } = this.state;\n        userList.splice(index, 1);\n        this.setState({\n            userList: [...userList]\n        })\n        //更新本地缓存\n        storage.set(\"UserList\", userList);\n    }\n    //修改数据\n    update(row) {\n        this.setState({ \n            dialogVisible: true,\n            updated: true,\n            form: {\n                name: row.name,\n                age: row.age,\n                sex: row.sex\n            }\n        });\n    }\n    //图片上传\n    handleAvatarScucess(res, file) {\n        console.log(res)\n        this.setState({ imageUrl: URL.createObjectURL(file.raw) });\n    }\n    beforeAvatarUpload(file) {\n        const isJPG = file.type === 'image/jpeg';\n        const isLt2M = file.size / 1024 / 1024 < 2;\n\n        if (!isJPG) {\n            alert('上传头像图片只能是 JPG 格式!');\n        }\n        if (!isLt2M) {\n            alert('上传头像图片大小不能超过 2MB!');\n        }\n        return isJPG && isLt2M;\n    }\n\n    render() {\n        // const { imageUrl } = this.state;\n        return (\n            <div><Button type=\"primary\" onClick={() => this.setState({ dialogVisible: true })}>新增</Button>\n                <Dialog\n                    size=\"tiny\"\n                    title=\"新增用户\"\n                    visible={this.state.dialogVisible}\n                    onCancel={() => this.setState({ dialogVisible: false })}\n                >\n                    <Dialog.Body>\n                        <Form ref=\"form\" model={this.state.form} rules={this.state.rules}>\n                            <Form.Item label=\"姓名\" labelWidth=\"60\" prop=\"name\">\n                                <Input placeholder=\"请输入姓名\" value={this.state.form.name} onChange={this.onChange.bind(this, 'name')} />\n                            </Form.Item>\n                            <Form.Item label=\"年龄\" labelWidth=\"60\" prop=\"age\">\n                                <Input placeholder=\"请输入年龄\" value={this.state.form.age} onChange={this.onChange.bind(this, 'age')} />\n                            </Form.Item>\n                            <Form.Item label=\"性别\" labelWidth=\"60\" prop=\"sex\">\n                                <Radio value=\"男\" checked={this.state.form.sex === 1} onChange={this.onSexChange.bind(this)}>男</Radio>\n                                <Radio value=\"女\" checked={this.state.form.sex === 2} onChange={this.onSexChange.bind(this)}>女</Radio>\n                            </Form.Item>\n                            {/* <Form.Item label=\"上传头像\" prop=\"img\">\n                                <Upload\n                                    action=\"http://localhost:3000/\"\n                                    showFileList={false}\n                                    onSuccess={(res, file) => this.handleAvatarScucess(res, file)}\n                                    beforeUpload={file => this.beforeAvatarUpload(file)}\n                                >\n                                    {imageUrl ? <img src={imageUrl} alt=\"img\" className=\"avatar\" /> : <i className=\"el-icon-plus avatar-uploader-icon\"></i>}\n                                </Upload>\n                            </Form.Item> */}\n                        </Form>\n                    </Dialog.Body>\n\n                    <Dialog.Footer className=\"dialog-footer\">\n                        <Button onClick={() => { this.refs.form.resetFields(); this.setState({ dialogVisible: false }) }}>取 消</Button>\n                        <Button type=\"primary\" onClick={this.addUser}>确 定</Button>\n                    </Dialog.Footer>\n                </Dialog>\n                <Table\n                    style={{ width: '500px' }}\n                    columns={this.state.columns}\n                    data={this.state.userList}\n                    highlightCurrentRow={true}\n                />\n            </div>\n        )\n    }\n}\nexport default UserList;"]},"metadata":{},"sourceType":"module"}
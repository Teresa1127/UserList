{"ast":null,"code":"var _jsxFileName = \"/Users/teresa/my-app/src/UserTable.js\";\nimport React from 'react';\nimport { Button, Dialog, Input, Form, Table, Tag } from 'element-react';\nimport 'element-theme-default';\nimport storage from './storage';\n\nclass UserTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form: {\n        name: '',\n        age: '',\n        sex: '',\n        img: ''\n      },\n      userList: [],\n      dialogVisible: false,\n      columns: [{\n        type: 'index'\n      }, {\n        type: 'expand',\n        label: \"详情\",\n        expandPannel: function (data) {\n          return React.createElement(Form, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(Form.Item, {\n            label: \"\\u59D3\\u540D\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, data.name)), React.createElement(Form.Item, {\n            label: \"\\u5E74\\u9F84\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, data.age)), React.createElement(Form.Item, {\n            label: \"\\u6027\\u522B\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, data.sex)), React.createElement(Form.Item, {\n            label: \"\\u5934\\u50CF\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, data.img)));\n        }\n      }, {\n        label: \"姓名\",\n        prop: \"name\",\n        width: 180,\n        render: function (userList) {\n          return React.createElement(Tag, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, userList.name);\n        }\n      }, {\n        label: \"操作\",\n        prop: \"address\",\n        render: index => {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, React.createElement(Button, {\n            plain: true,\n            type: \"info\",\n            size: \"small\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"\\u7F16\\u8F91\"), React.createElement(Button, {\n            type: \"danger\",\n            size: \"small\",\n            onClick: this.deleteRow.bind(this, index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"\\u5220\\u9664\"));\n        }\n      }]\n    };\n  } //生命周期函数 页面加载就会触发\n\n\n  componentDidMount() {\n    //获取本地缓存的用户列表\n    let userList = storage.get(\"UserList\");\n\n    if (userList) {\n      this.setState({\n        userList: userList\n      });\n    } //console.log(userList);\n\n  } //删除数据\n\n\n  deleteRow(index) {\n    const userList = this.state.userList;\n    userList.splice(index, 1);\n    this.setState({\n      userList: [...userList]\n    }); //更新本地缓存\n\n    storage.set(\"UserList\", userList);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Table, {\n      style: {\n        width: '500px'\n      },\n      columns: this.state.columns,\n      data: this.state.userList,\n      highlightCurrentRow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default UserTable;","map":{"version":3,"sources":["/Users/teresa/my-app/src/UserTable.js"],"names":["React","Button","Dialog","Input","Form","Table","Tag","storage","UserTable","Component","constructor","props","state","form","name","age","sex","img","userList","dialogVisible","columns","type","label","expandPannel","data","prop","width","render","index","deleteRow","bind","componentDidMount","get","setState","splice","set"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Dialog, Input, Form, Table, Tag } from 'element-react';\nimport 'element-theme-default';\nimport storage from './storage';\n\nclass UserTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            form: {\n                name: '',\n                age: '',\n                sex: '',\n                img: ''\n            },\n            userList: [],\n            dialogVisible: false,\n            columns: [\n                {\n                    type: 'index'\n                },\n                {\n                    type: 'expand',\n                    label: \"详情\",\n                    expandPannel: function (data) {\n                        return (\n                            <Form>\n                                <Form.Item label=\"姓名\"><span>{data.name}</span></Form.Item>\n                                <Form.Item label=\"年龄\"><span>{data.age}</span></Form.Item>\n                                <Form.Item label=\"性别\"><span>{data.sex}</span></Form.Item>\n                                <Form.Item label=\"头像\"><span>{data.img}</span></Form.Item>\n                            </Form>\n                        )\n                    }\n                },\n                {\n                    label: \"姓名\",\n                    prop: \"name\",\n                    width: 180,\n                    render: function (userList) {\n                        return <Tag>{userList.name}</Tag>\n                    }\n                },\n                {\n                    label: \"操作\",\n                    prop: \"address\",\n                    render: (index) => {\n                        return (\n                            <span>\n                                <Button plain={true} type=\"info\" size=\"small\">编辑</Button>\n                                <Button type=\"danger\" size=\"small\" onClick={this.deleteRow.bind(this, index)}>删除</Button>\n                            </span>\n                        )\n                    }\n                }\n            ]\n        }\n    }\n\n    //生命周期函数 页面加载就会触发\n    componentDidMount() {\n        //获取本地缓存的用户列表\n        let userList = storage.get(\"UserList\");\n        if (userList) {\n            this.setState({\n                userList: userList\n            })\n        }\n        //console.log(userList);\n    }\n    //删除数据\n    deleteRow(index) {\n        const { userList } = this.state;\n        userList.splice(index, 1);\n        this.setState({\n            userList: [...userList]\n        })\n        //更新本地缓存\n        storage.set(\"UserList\", userList);\n    }\n\n    render() {\n        return (\n            <div>\n                <Table\n                    style={{ width: '500px' }}\n                    columns={this.state.columns}\n                    data={this.state.userList}\n                    highlightCurrentRow={true}\n                />\n            </div>\n        )\n    }\n}\nexport default UserTable;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/teresa/my-app/src/UserList.js\";\nimport React from 'react';\nimport storage from './storage';\n\nclass UserList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addData = e => {\n      if (e.keyCode == 13) {\n        let title = this.refs.title.value;\n        let tempList = this.state.finishList;\n        tempList.push({\n          title: title,\n          checked: false\n        });\n        this.setState({\n          list: tempList\n        }); //增加框设置为空\n\n        this.refs.title.value = \"\"; //缓存数据,使用localStorage，而将一个对象转为字符串使用JSON.stringify()函数\n\n        storage.set(\"TodoList\", tempList);\n      }\n    };\n\n    this.changeState = key => {\n      let templist = this.state.finishList;\n      templist[key].checked = !templist[key].checked;\n      this.setState({\n        list: templist\n      });\n      storage.set(\"TodoList\", templist);\n    };\n\n    this.deleteData = key => {\n      let templist = this.state.finishList;\n      templist.splice(key, 1);\n      this.setState({\n        list: templist\n      });\n      storage.set(\"TodoList\", templist);\n    };\n\n    this.state = {\n      list: [],\n      finishList: [\n        /*  {\n              title:\"录制java\",\n              checked:true\n          },\n          {\n              title:\"录制react\",\n              checked:false\n          },\n          {\n              title:\"录制python\",\n              checked:true\n          }*/\n      ]\n    };\n  } //生命周期函数    页面加载就会触发\n\n\n  componentDidMount() {\n    //获取缓存的数据\n    let todoList = storage.get(\"TodoList\");\n\n    if (todoList) {\n      this.setState({\n        finishList: todoList\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Todolist index\", React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Todolist\\u6F14\\u793A\"), React.createElement(\"input\", {\n      ref: \"title\",\n      onKeyUp: this.addData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"\\u6B63\\u5728\\u8FDB\\u884C\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), this.state.finishList.map((value, key) => {\n      if (value.checked == false) {\n        return React.createElement(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: value.checked,\n          onChange: this.changeState.bind(this, key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), value.title, \"---\", React.createElement(\"button\", {\n          onClick: this.deleteData.bind(this, key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"\\u5220\\u9664\"));\n      }\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"\\u5DF2\\u5B8C\\u6210\\u4E8B\\u9879\"), this.state.finishList.map((value, key) => {\n      if (value.checked == true) {\n        return React.createElement(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: value.checked,\n          onChange: this.changeState.bind(this, key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), value.title, \"---\", React.createElement(\"button\", {\n          onClick: this.deleteData.bind(this, key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"\\u5220\\u9664\"));\n      }\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default UserList;","map":{"version":3,"sources":["/Users/teresa/my-app/src/UserList.js"],"names":["React","storage","UserList","Component","constructor","props","addData","e","keyCode","title","refs","value","tempList","state","finishList","push","checked","setState","list","set","changeState","key","templist","deleteData","splice","componentDidMount","todoList","get","render","map","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport storage from './storage';\nclass UserList extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n                list:[],\n                finishList:[\n                  /*  {\n                        title:\"录制java\",\n                        checked:true\n                    },\n                    {\n                        title:\"录制react\",\n                        checked:false\n                    },\n                    {\n                        title:\"录制python\",\n                        checked:true\n                    }*/\n                ]\n        };\n    }\n\n    //生命周期函数    页面加载就会触发\n    componentDidMount(){\n        //获取缓存的数据\n        let todoList = storage.get(\"TodoList\");\n        if(todoList){\n            this.setState({\n                finishList:todoList\n            })\n        }\n    }\n    addData=(e)=>{\n        if(e.keyCode==13){\n            let title=this.refs.title.value;\n            let tempList = this.state.finishList;\n            tempList.push({\n                title:title,\n                checked:false\n            })\n            this.setState({\n                list:tempList\n            });\n            //增加框设置为空\n            this.refs.title.value=\"\";\n            //缓存数据,使用localStorage，而将一个对象转为字符串使用JSON.stringify()函数\n            storage.set(\"TodoList\",tempList);\n        }\n    }\n\n    changeState=(key)=>{\n        let templist =this.state.finishList;\n        templist[key].checked =!templist[key].checked;\n        this.setState({\n            list:templist\n        });\n        storage.set(\"TodoList\",templist);\n    }\n    deleteData=(key)=>{\n        let templist =this.state.finishList;\n        templist.splice(key,1);\n        this.setState({\n            list:templist\n        })\n        storage.set(\"TodoList\",templist);\n    }\n\n    render(){\n        return (\n            <div>\n                Todolist index\n                <h2>Todolist演示</h2>\n                <input ref=\"title\" onKeyUp={this.addData}/>\n                <hr/>\n                <h2>\n\n                </h2>\n               <h2>正在进行</h2>\n\n                <hr/>\n                {\n                    this.state.finishList.map( (value,key)=> {\n                        if(value.checked==false){\n                            return(\n                                <li key={key}>\n                                    <input type=\"checkbox\" checked={value.checked} onChange={this.changeState.bind(this,key)}/>{value.title}\n                                    ---<button onClick={this.deleteData.bind(this,key)}>删除</button>\n                                </li>\n                            )\n                        }\n                    })\n                }\n                <h2>已完成事项</h2>\n                {\n                    this.state.finishList.map( (value,key)=> {\n                        if(value.checked==true){\n                            return(\n                                <li key={key}>\n                                    <input type=\"checkbox\" checked={value.checked} onChange={this.changeState.bind(this,key)} />{value.title}\n                                    ---<button onClick={this.deleteData.bind(this,key)}>删除</button>\n                                </li>\n                            )\n                        }\n                    })\n                }\n                <hr/>\n\n\n\n            </div>\n        )\n    }\n}\nexport default UserList;"]},"metadata":{},"sourceType":"module"}
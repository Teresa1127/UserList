{"ast":null,"code":"var _jsxFileName = \"/Users/teresa/my-app/src/UserList.js\";\nimport React from 'react';\nimport { Button, Dialog, Tag, Table, Form } from 'element-react';\nimport 'element-theme-default';\nimport storage from './storage';\n\nclass UserList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addData = e => {\n      if (e.keyCode == 13) {\n        let title = this.refs.title.value;\n        let tempList = this.state.finishList;\n        tempList.push({\n          title: title,\n          checked: false\n        });\n        this.setState({\n          list: tempList\n        }); //增加框设置为空\n\n        this.refs.title.value = \"\"; //缓存数据,使用localStorage，而将一个对象转为字符串使用JSON.stringify()函数\n\n        storage.set(\"TodoList\", tempList);\n      }\n    };\n\n    this.changeState = key => {\n      let templist = this.state.finishList;\n      templist[key].checked = !templist[key].checked;\n      this.setState({\n        list: templist\n      });\n      storage.set(\"TodoList\", templist);\n    };\n\n    this.deleteData = key => {\n      let templist = this.state.finishList;\n      templist.splice(key, 1);\n      this.setState({\n        list: templist\n      });\n      storage.set(\"TodoList\", templist);\n    };\n\n    this.state = {\n      list: [],\n      finishList: [\n        /*  {\n              title:\"录制java\",\n              checked:true\n          },\n          {\n              title:\"录制react\",\n              checked:false\n          },\n          {\n              title:\"录制python\",\n              checked:true\n          }*/\n      ]\n    };\n  } //生命周期函数    页面加载就会触发\n\n\n  componentDidMount() {\n    //获取缓存的数据\n    let todoList = storage.get(\"TodoList\");\n\n    if (todoList) {\n      this.setState({\n        finishList: todoList\n      });\n    }\n  } //点击新增后显示表单弹窗\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.onClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\u65B0\\u589E\"), React.createElement(\"input\", {\n      ref: \"title\",\n      onKeyUp: this.addData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"\\u6B63\\u5728\\u8FDB\\u884C\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), this.state.finishList.map((value, key) => {\n      if (value.checked == false) {\n        return React.createElement(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: value.checked,\n          onChange: this.changeState.bind(this, key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }), value.title, \"---\", React.createElement(\"button\", {\n          onClick: this.deleteData.bind(this, key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"\\u5220\\u9664\"));\n      }\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"\\u5DF2\\u5B8C\\u6210\\u4E8B\\u9879\"), this.state.finishList.map((value, key) => {\n      if (value.checked == true) {\n        return React.createElement(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: value.checked,\n          onChange: this.changeState.bind(this, key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), value.title, \"---\", React.createElement(\"button\", {\n          onClick: this.deleteData.bind(this, key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"\\u5220\\u9664\"));\n      }\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default UserList;","map":{"version":3,"sources":["/Users/teresa/my-app/src/UserList.js"],"names":["React","Button","Dialog","Tag","Table","Form","storage","UserList","Component","constructor","props","addData","e","keyCode","title","refs","value","tempList","state","finishList","push","checked","setState","list","set","changeState","key","templist","deleteData","splice","componentDidMount","todoList","get","render","onClick","bind","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Dialog, Tag, Table, Form } from 'element-react';\nimport 'element-theme-default';\nimport storage from './storage';\n\nclass UserList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            finishList: [\n                /*  {\n                      title:\"录制java\",\n                      checked:true\n                  },\n                  {\n                      title:\"录制react\",\n                      checked:false\n                  },\n                  {\n                      title:\"录制python\",\n                      checked:true\n                  }*/\n            ]\n        };\n    }\n\n    //生命周期函数    页面加载就会触发\n    componentDidMount() {\n        //获取缓存的数据\n        let todoList = storage.get(\"TodoList\");\n        if (todoList) {\n            this.setState({\n                finishList: todoList\n            })\n        }\n    }\n    //点击新增后显示表单弹窗\n    addData = (e) => {\n        if (e.keyCode == 13) {\n            let title = this.refs.title.value;\n            let tempList = this.state.finishList;\n            tempList.push({\n                title: title,\n                checked: false\n            })\n            this.setState({\n                list: tempList\n            });\n            //增加框设置为空\n            this.refs.title.value = \"\";\n            //缓存数据,使用localStorage，而将一个对象转为字符串使用JSON.stringify()函数\n            storage.set(\"TodoList\", tempList);\n        }\n    }\n\n    changeState = (key) => {\n        let templist = this.state.finishList;\n        templist[key].checked = !templist[key].checked;\n        this.setState({\n            list: templist\n        });\n        storage.set(\"TodoList\", templist);\n    }\n    deleteData = (key) => {\n        let templist = this.state.finishList;\n        templist.splice(key, 1);\n        this.setState({\n            list: templist\n        })\n        storage.set(\"TodoList\", templist);\n    }\n\n    render() {\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.onClick.bind(this)}>新增</Button>\n                <input ref=\"title\" onKeyUp={this.addData} />\n                <hr />\n                <h2>\n\n                </h2>\n                <h2>正在进行</h2>\n\n                <hr />\n                {\n                    this.state.finishList.map((value, key) => {\n                        if (value.checked == false) {\n                            return (\n                                <li key={key}>\n                                    <input type=\"checkbox\" checked={value.checked} onChange={this.changeState.bind(this, key)} />{value.title}\n                                    ---<button onClick={this.deleteData.bind(this, key)}>删除</button>\n                                </li>\n                            )\n                        }\n                    })\n                }\n                <h2>已完成事项</h2>\n                {\n                    this.state.finishList.map((value, key) => {\n                        if (value.checked == true) {\n                            return (\n                                <li key={key}>\n                                    <input type=\"checkbox\" checked={value.checked} onChange={this.changeState.bind(this, key)} />{value.title}\n                                    ---<button onClick={this.deleteData.bind(this, key)}>删除</button>\n                                </li>\n                            )\n                        }\n                    })\n                }\n                <hr />\n            </div>\n        )\n    }\n}\nexport default UserList;"]},"metadata":{},"sourceType":"module"}